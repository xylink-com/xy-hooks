(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[10],{"3pEk":function(e,t,n){"use strict";n.r(t);var a=n("q1tI"),l=n.n(a),r=n("dEAq"),i=n("0zqC"),o=n("ZpkN"),c=l.a.memo(n("JjdP").default["useanimate-basic"].component),s=l.a.memo(n("JjdP").default["useanimate-reverse"].component),m=l.a.memo(n("JjdP").default["useanimate-repeat"].component),u=l.a.memo(n("JjdP").default["useanimate-type"].component),d=l.a.memo(n("JjdP").default["useanimate-complex"].component);t["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h1",{id:"useanimate"},l.a.createElement(r["AnchorLink"],{to:"#useanimate","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"useAnimate"),l.a.createElement("p",null,"Generate types of animations base on motion values."),l.a.createElement("h2",{id:"examples"},l.a.createElement(r["AnchorLink"],{to:"#examples","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Examples")),l.a.createElement(i["default"],{sources:{_:{tsx:"import React, { useState } from 'react';\nimport { useAnimate } from 'xy-hooks';\n\nexport default function Ani() {\n  const [value, setAnimate] = useAnimate(10, { type: 'Quad', effect: 'easeInOut' });\n\n  return (\n    <div\n      onClick={() => {\n        setAnimate(300, 1000);\n      }}\n    >\n      <div\n        style={{\n          height: 40,\n          width: 40,\n          backgroundColor: 'red',\n          marginLeft: value,\n        }}\n      ></div>\n    </div>\n  );\n}\n"}},dependencies:{react:{version:"16.14.0"},"xy-hooks":{version:"1.0.0"}},title:"Basic Usage",description:'<div class="markdown"><p>click the box, margin left of the box moves from 10px to 300px in 1s.</p></div>',"title_zh-CN":"\u57fa\u7840\u7528\u6cd5","description_zh-CN":'<div class="markdown"><p>\u70b9\u51fb div\uff0cdiv \u7684 margin left \u5c06\u5728 1s \u5185 \u4ece 10px \u79fb\u52a8\u5230 300px\u3002</p></div>',identifier:"useanimate-basic"},l.a.createElement(c,null)),l.a.createElement("div",{className:"markdown"}),l.a.createElement(i["default"],{sources:{_:{tsx:"import React, { useState } from 'react';\nimport { useAnimate } from 'xy-hooks';\n\nexport default function Ani() {\n  const [value, setAnimate] = useAnimate(10, { type: 'Quad', effect: 'easeInOut', reverse: true });\n\n  return (\n    <div\n      onClick={() => {\n        setAnimate(300, 1000);\n      }}\n    >\n      <div\n        style={{\n          height: 40,\n          width: 40,\n          backgroundColor: 'red',\n          marginLeft: value,\n        }}\n      ></div>\n    </div>\n  );\n}\n"}},dependencies:{react:{version:"16.14.0"},"xy-hooks":{version:"1.0.0"}},title:"Reverse Animation",description:'<div class="markdown"><p>click the box, margin left of the box moves from 10px to 300px in 1s and reverse. The animation will reverse automatically.</p></div>',"title_zh-CN":"\u6062\u590d\u52a8\u753b","description_zh-CN":'<div class="markdown"><p>\u70b9\u51fb div\uff0cdiv \u7684 margin left \u5c06\u5728 1s \u5185 \u4ece 10px \u79fb\u52a8\u5230 300px, \u5e76\u8fd4\u56de\u3002\u52a8\u753b\u5c06\u4f1a\u6062\u590d\u3002</p></div>',identifier:"useanimate-reverse"},l.a.createElement(s,null)),l.a.createElement("div",{className:"markdown"}),l.a.createElement(i["default"],{sources:{_:{tsx:"import React, { useState } from 'react';\nimport { useAnimate } from 'xy-hooks';\n\nexport default function Ani() {\n  const [repeat, setRepeat] = useState(5);\n  const [value, setAnimate] = useAnimate(10, {\n    type: 'Quad',\n    effect: 'easeInOut',\n    reverse: true,\n    repeat,\n  });\n\n  return (\n    <div\n      onClick={() => {\n        setAnimate(300, 1000);\n      }}\n    >\n      <div\n        style={{\n          height: 40,\n          width: 40,\n          backgroundColor: 'red',\n          marginLeft: value,\n        }}\n      ></div>\n      <div\n        style={{\n          marginTop: 40,\n        }}\n      >\n        <button\n          onClick={(e) => {\n            e.stopPropagation();\n            setRepeat(Infinity);\n          }}\n        >\n          Infinity Animation\n        </button>\n      </div>\n    </div>\n  );\n}\n"}},dependencies:{react:{version:"16.14.0"},"xy-hooks":{version:"1.0.0"}},title:"Repeat Animation",description:'<div class="markdown"><p>click the box, margin left of the box moves from 10px to 300px in 1s and reverse. The animation will repeat foe some times.</p></div>',"title_zh-CN":"\u5faa\u73af\u52a8\u753b","description_zh-CN":'<div class="markdown"><p>\u70b9\u51fb div\uff0cdiv \u7684 margin left \u5c06\u5728 1s \u5185 \u4ece 10px \u79fb\u52a8\u5230 300px, \u5e76\u8fd4\u56de\u3002\u52a8\u753b\u5c06\u5faa\u73af\u6307\u5b9a\u7684\u6b21\u6570\u3002</p></div>',identifier:"useanimate-repeat"},l.a.createElement(m,null)),l.a.createElement("div",{className:"markdown"}),l.a.createElement(i["default"],{sources:{_:{tsx:"import React, { useState } from 'react';\nimport { useAnimate } from 'xy-hooks';\n\nexport default function Ani() {\n  const [type, setType] = useState('Linear');\n  const [value, setAnimate] = useAnimate(10, { type: type, effect: 'easeInOut', reverse: true });\n\n  return (\n    <div>\n      <div\n        style={{\n          height: 40,\n          width: 40,\n          backgroundColor: 'red',\n          marginLeft: value,\n        }}\n        onClick={(e) => {\n          setAnimate(300, 1000);\n        }}\n      ></div>\n      <div\n        style={{\n          marginTop: 40,\n          display: 'flex',\n          justifyContent: 'space-between',\n          flexWrap: 'wrap',\n          alignItems: 'center',\n        }}\n      >\n        <button onClick={() => setType('Linear')}>Linear</button>\n        <button onClick={() => setType('Quad')}>Quad</button>\n        <button onClick={() => setType('Cubic')}>Cubic</button>\n        <button onClick={() => setType('Quart')}>Quart</button>\n        <button onClick={() => setType('Quint')}>Quint</button>\n        <button onClick={() => setType('Sine')}>Sine</button>\n        <button onClick={() => setType('Expo')}>Expo</button>\n        <button onClick={() => setType('Circ')}>Circ</button>\n        <button onClick={() => setType('Elastic')}>Elastic</button>\n        <button onClick={() => setType('Back')}>Back</button>\n        <button onClick={() => setType('Bounce')}>Bounce</button>\n      </div>\n    </div>\n  );\n}\n"}},dependencies:{react:{version:"16.14.0"},"xy-hooks":{version:"1.0.0"}},title:"Types of Animation",description:'<div class="markdown"><p>different types of animation.</p></div>',"title_zh-CN":"\u52a8\u753b\u7c7b\u578b","description_zh-CN":'<div class="markdown"><p>\u52a8\u753b\u7684\u4e0d\u540c\u7c7b\u578b\u3002</p></div>',identifier:"useanimate-type"},l.a.createElement(u,null)),l.a.createElement("div",{className:"markdown"}),l.a.createElement(i["default"],{sources:{_:{tsx:"import React, { useState } from 'react';\nimport { useAnimate } from 'xy-hooks';\n\nexport default function Ani() {\n  const [move, setMove] = useAnimate(40, { type: 'Bounce', effect: 'easeInOut', reverse: true });\n  const [color, setColor] = useAnimate(0, { type: 'Back', effect: 'easeInOut', reverse: true });\n  const [size, setSize] = useAnimate(40, { type: 'Elastic', effect: 'easeInOut', reverse: true });\n  const [rotate, setRotate] = useAnimate(0, {\n    type: 'Elastic',\n    effect: 'easeInOut',\n    reverse: true,\n  });\n  const [opacity, setOpacity] = useAnimate(0.5, {\n    type: 'Elastic',\n    effect: 'easeInOut',\n    reverse: true,\n  });\n\n  return (\n    <div\n      style={{\n        position: 'relative',\n        height: 200,\n      }}\n    >\n      <div\n        style={{\n          height: size,\n          width: size,\n          backgroundColor: `rgb(${color}, ${255 - color}, ${color})`,\n          position: 'absolute',\n          left: move,\n          top: move,\n          transform: `rotate(${rotate}deg)`,\n          opacity,\n        }}\n      ></div>\n      {/* FIXME \u9632\u6296\u5904\u7406 */}\n      <button\n        onClick={() => {\n          setMove(300, 1000);\n          setColor(255, 1000);\n          setSize(80, 1000);\n          setRotate(360, 1000);\n          setOpacity(1, 1000);\n        }}\n      >\n        start\n      </button>\n    </div>\n  );\n}\n"}},dependencies:{react:{version:"16.14.0"},"xy-hooks":{version:"1.0.0"}},title:"Different Animations",description:'<div class="markdown"><p>Different animations controls by values.</p></div>',"title_zh-CN":"\u63a7\u5236\u591a\u4e2a\u52a8\u753b","description_zh-CN":'<div class="markdown"><p>\u540c\u65f6\u63a7\u5236\u591a\u4e2a\u52a8\u753b\u3002</p></div>',identifier:"useanimate-complex"},l.a.createElement(d,null)),l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"api"},l.a.createElement(r["AnchorLink"],{to:"#api","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"API"),l.a.createElement(o["a"],{code:"import { useAnimate } from 'xy-hooks';\nconst [opacity, setOpacity] = useAnimate(0.5, { type: 'Elastic', effect: 'easeInOut', reverse: true });\n",lang:"ts"}),l.a.createElement("h3",{id:"params"},l.a.createElement(r["AnchorLink"],{to:"#params","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Params"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Property"),l.a.createElement("th",null,"Description"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Default"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"initVal"),l.a.createElement("td",null,"init value of animation"),l.a.createElement("td",null,"number"),l.a.createElement("td",null,"0")),l.a.createElement("tr",null,l.a.createElement("td",null,"options"),l.a.createElement("td",null,"options"),l.a.createElement("td",null,"IOptions"),l.a.createElement("td",null,"{","}")))),l.a.createElement("h3",{id:"options"},l.a.createElement(r["AnchorLink"],{to:"#options","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Options"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Property"),l.a.createElement("th",null,"Description"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Default"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"type"),l.a.createElement("td",null,"type of animation"),l.a.createElement("td",null,"TAni"),l.a.createElement("td",null,"'Linear'")),l.a.createElement("tr",null,l.a.createElement("td",null,"effect"),l.a.createElement("td",null,"effect of animation"),l.a.createElement("td",null,"TEffect"),l.a.createElement("td",null,"'easeInOut'")),l.a.createElement("tr",null,l.a.createElement("td",null,"reverse"),l.a.createElement("td",null,"reverse animation"),l.a.createElement("td",null,"boolean"),l.a.createElement("td",null,"false")),l.a.createElement("tr",null,l.a.createElement("td",null,"repeat"),l.a.createElement("td",null,"repeat of animation"),l.a.createElement("td",null,"'once'"),l.a.createElement("td",null,"number")))),l.a.createElement("h3",{id:"types"},l.a.createElement(r["AnchorLink"],{to:"#types","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Types"),l.a.createElement(o["a"],{code:"export type TAni =\n  | 'Linear'\n  | 'Quad'\n  | 'Cubic'\n  | 'Quart'\n  | 'Quint'\n  | 'Sine'\n  | 'Expo'\n  | 'Circ'\n  | 'Elastic'\n  | 'Back'\n  | 'Bounce';\n\nexport type TEffect = 'easeIn' | 'easeOut' | 'easeInOut';\nexport type TRepeat = 'once' | number | Infinity;\n\nexport interface IOptions {\n  type?: TAni;\n  effect?: TEffect;\n  reverse?: boolean;\n  repeat?: TRepeat;\n}\n",lang:"ts"}),l.a.createElement("h3",{id:"result"},l.a.createElement(r["AnchorLink"],{to:"#result","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"Result"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Property"),l.a.createElement("th",null,"Description"),l.a.createElement("th",null,"Type"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"value"),l.a.createElement("td",null,"animation value"),l.a.createElement("td",null,"number")),l.a.createElement("tr",null,l.a.createElement("td",null,"setAnimate"),l.a.createElement("td",null,"set animation params and start"),l.a.createElement("td",null,"(endVal: number, duration: number, current?: number = 0) => void")))),l.a.createElement("h3",{id:"setanimate"},l.a.createElement(r["AnchorLink"],{to:"#setanimate","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:["icon","icon-link"]})),"setAnimate"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Property"),l.a.createElement("th",null,"Description"),l.a.createElement("th",null,"Type"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"endVal"),l.a.createElement("td",null,"end value of animation"),l.a.createElement("td",null,"number")),l.a.createElement("tr",null,l.a.createElement("td",null,"duration"),l.a.createElement("td",null,"animation duration(ms)"),l.a.createElement("td",null,"number")),l.a.createElement("tr",null,l.a.createElement("td",null,"current"),l.a.createElement("td",null,"from current to generate values"),l.a.createElement("td",null,"number")))))))}}}]);